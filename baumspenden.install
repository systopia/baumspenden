<?php
/*-------------------------------------------------------+
| Bergwaldprojekt Baumspenden                            |
| Copyright (C) 2010 SYSTOPIA                            |
+--------------------------------------------------------+
| This program is released as free software under the    |
| Affero GPL license. You can redistribute it and/or     |
| modify it under the terms of this license which you    |
| can read by viewing the included agpl.txt or online    |
| at www.gnu.org/licenses/agpl.html. Removal of this     |
| copyright header is strictly prohibited without        |
| written permission from the original author(s).        |
+--------------------------------------------------------*/

/**
 * Implements hook_install().
 */
function baumspenden_install()
{
    // Create product fields and instances.
    foreach (
        [
            'plant_period' => t('Plant period'),
            'plant_region' => t('Plant region'),
            'plant_tree' => t('Tree species'),
        ] as $field_name => $field_label
    ) {
        if (!field_info_field('baumspenden_' . $field_name)) {
            $field_info = [
                'field_name' => 'baumspenden_' . $field_name,
                'type' => 'list_text',
            ];
            field_create_field($field_info);
        }
        $instance = [
            'field_name' => 'baumspenden_' . $field_name,
            'entity_type' => 'commerce_product',
            'bundle' => DrupalBaumspendenDonation::PRODUCT_TYPE,
            'label' => $field_label,
            'required' => true,
            'settings' => [],
            'widget' => [
                'type' => 'options_select',
            ],
        ];
        field_create_instance($instance);
    }

    // Create "Baumspende" order type and add an addressfield for presentee
    // data.
    $order_type = [
        'type' => DrupalBaumspendenOrder::ORDER_TYPE,
        'name' => 'Baumspendenbestellung',
        'is_new' => true,
    ];
    commerce_order_types_commerce_order_type_save($order_type);
    // Add default fields to the order type.
    commerce_order_configure_order_type($order_type['type']);

    if (!field_info_field(DrupalBaumspendenConfig::FIELD_NAME_PRESENTEE)) {
        $field_info = [
            'field_name' => DrupalBaumspendenConfig::FIELD_NAME_PRESENTEE,
            'type' => 'addressfield',
        ];
        field_create_field($field_info);
    }
    $instance = [
        'field_name' => DrupalBaumspendenConfig::FIELD_NAME_PRESENTEE,
        'entity_type' => 'commerce_order',
        'bundle' => DrupalBaumspendenOrder::ORDER_TYPE,
        'label' => 'Beschenkter',
        'required' => false,
        'widget' => [
            'type' => 'addressfield_standard',
            'settings' => [
                'available_countries' => [],
                // Can't use variable_get('site_default_country') here because it would
                // set the value in stone. Instead, the site_default option allows the
                // default country to always reflect the current site setting.
                'default_country' => 'site_default',
                'format_handlers' => [
                    'address',
                    'address-hide-administrative-area',
                    'address-hide-country',
                    'name-full',
                ],
            ],
        ],
    ];
    field_create_instance($instance);

    // TODO: Add e-mail fields on customer profile and order.

    // Add SEPA payment method.
    module_load_include('module', 'commerce_cop');
    // @see: commerce_cop_edit_payment_form_submit().
    $record = [
        'id' => 'sepa_direct_debit',
        'title' => 'SEPA Direct Debit',
        'description' => '',
        'information' => '',
        'format' => 'plain_text',
        'status' => true,
        'checkout' => true,
        'terminal' => true,
        'fieldable' => true,
    ];
    if (commerce_cop_payment_save($record)) {
        if (module_exists('commerce_payment_fields')) {
            //@to do deep integration with Drupal Commerce Payment Transaction Fields module.
            entity_info_cache_clear();
            menu_rebuild();
        }
    }

    // Add IBAN field.
    if (!field_info_field(DrupalBaumspendenConfig::FIELD_NAME_IBAN)) {
        $field_info = [
            'field_name' => DrupalBaumspendenConfig::FIELD_NAME_IBAN,
            'type' => 'iban_field',
        ];
        field_create_field($field_info);
    }
    $instance = [
        'field_name' => DrupalBaumspendenConfig::FIELD_NAME_IBAN,
        'entity_type' => 'commerce_payment_transaction',
        'bundle' => 'sepa_direct_debit',
        'label' => 'IBAN',
        'required' => true,
        'widget' => [
            'type' => 'iban_field',
        ],
    ];
    field_create_instance($instance);

    // Add BIC field.
    if (!field_info_field(DrupalBaumspendenConfig::FIELD_NAME_BIC)) {
        $field_info = [
            'field_name' => DrupalBaumspendenConfig::FIELD_NAME_BIC,
            'type' => 'text',
        ];
        field_create_field($field_info);
    }
    $instance = [
        'field_name' => DrupalBaumspendenConfig::FIELD_NAME_BIC,
        'entity_type' => 'commerce_payment_transaction',
        'bundle' => 'sepa_direct_debit',
        'label' => 'BIC',
        'required' => false,
        'widget' => [
            'type' => 'text_textfield',
        ],
    ];
    field_create_instance($instance);
}

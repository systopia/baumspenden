<?php
/*-------------------------------------------------------+
| Bergwaldprojekt Baumspenden                            |
| Copyright (C) 2010 SYSTOPIA                            |
+--------------------------------------------------------+
| This program is released as free software under the    |
| Affero GPL license. You can redistribute it and/or     |
| modify it under the terms of this license which you    |
| can read by viewing the included agpl.txt or online    |
| at www.gnu.org/licenses/agpl.html. Removal of this     |
| copyright header is strictly prohibited without        |
| written permission from the original author(s).        |
+--------------------------------------------------------*/

/**
 * Implements hook_install().
 */
function baumspenden_install()
{
    /**
     * Commerce product fields.
     */
    foreach (
        [
            'plant_period' => t('Plant period'),
            'plant_region' => t('Plant region'),
            'plant_tree' => t('Tree species'),
        ] as $field_name => $field_label
    ) {
        if (!field_info_field('baumspenden_' . $field_name)) {
            $field_info = [
                'field_name' => 'baumspenden_' . $field_name,
                'type' => 'list_text',
            ];
            field_create_field($field_info);
        }
        if (!field_info_instance(
            'commerce_product',
            'baumspenden_' . $field_name,
            DrupalBaumspendenDonation::PRODUCT_TYPE
        )) {
            $instance = [
                'field_name' => 'baumspenden_' . $field_name,
                'entity_type' => 'commerce_product',
                'bundle' => DrupalBaumspendenDonation::PRODUCT_TYPE,
                'label' => $field_label,
                'required' => true,
                'settings' => [],
                'widget' => [
                    'type' => 'options_select',
                ],
            ];
            field_create_instance($instance);
        }
    }

    /**
     * Commerce order type.
     */
    $order_type = [
        'type' => DrupalBaumspendenOrder::ORDER_TYPE,
        'name' => 'Baumspendenbestellung',
        'is_new' => true,
    ];
    commerce_order_types_commerce_order_type_save($order_type);
    // Add default fields to the order type.
    commerce_order_configure_order_type($order_type['type']);

    // Remove commerce_customer_billing field from the order type, since we're
    // adding our own profile reference fields.
    // @see baumspenden_commerce_customer_profile_type_info().
    $instance = field_info_instance(
        'commerce_order',
        'commerce_customer_billing',
        DrupalBaumspendenOrder::ORDER_TYPE
    );
    field_delete_instance($instance, false);

    /**
     * Commerce customer profiles.
     */
    // Create field for e-mail addresses on customer profile types.
    if (!field_info_field(DrupalBaumspendenConfig::FIELD_NAME_EMAIL)) {
        $field_info = [
            'field_name' => DrupalBaumspendenConfig::FIELD_NAME_EMAIL,
            'type' => 'email',
        ];
        field_create_field($field_info);
    }

    // Create email field instance for donor e-mail address on the donor
    // customer profile type.
    if (!field_info_instance(
        'commerce_customer_profile',
        DrupalBaumspendenConfig::FIELD_NAME_EMAIL,
        DrupalBaumspendenOrder::CUSTOMER_PROFILE_TYPE_DONOR
    )) {
        $instance = [
            'field_name' => DrupalBaumspendenConfig::FIELD_NAME_EMAIL,
            'entity_type' => 'commerce_customer_profile',
            'bundle' => DrupalBaumspendenOrder::CUSTOMER_PROFILE_TYPE_DONOR,
            'label' => 'E-Mail-Adresse',
            'required' => false,
        ];
        field_create_instance($instance);
    }

    // Create email field instance for donor e-mail address on the presentee
    // customer profile type.
    if (!field_info_instance(
        'commerce_customer_profile',
        DrupalBaumspendenConfig::FIELD_NAME_EMAIL,
        DrupalBaumspendenOrder::CUSTOMER_PROFILE_TYPE_PRESENTEE
    )) {
        $instance = [
            'field_name' => DrupalBaumspendenConfig::FIELD_NAME_EMAIL,
            'entity_type' => 'commerce_customer_profile',
            'bundle' => DrupalBaumspendenOrder::CUSTOMER_PROFILE_TYPE_PRESENTEE,
            'label' => 'E-Mail-Adresse',
            'required' => false,
        ];
        field_create_instance($instance);
    }

    // Disable checkout panes for our customer profiles.
    foreach (
        [
            DrupalBaumspendenOrder::CUSTOMER_PROFILE_TYPE_DONOR,
            DrupalBaumspendenOrder::CUSTOMER_PROFILE_TYPE_PRESENTEE,
        ] as $profile_type
    ) {
        $checkout_pane = commerce_checkout_pane_load(
            'customer_profile_' . $profile_type
        );
        $checkout_pane['enabled'] = false;
        $checkout_pane['page'] = 'disabled';
        commerce_checkout_pane_save($checkout_pane);
        drupal_static_reset('commerce_checkout_panes');
    }

    /**
     * Commerce payment method "SEPA Direct Debit".
     */
    // Add SEPA payment method.
    module_load_include('module', 'commerce_cop');
    // @see: commerce_cop_edit_payment_form_submit().
    $record = [
        'id' => 'sepa_direct_debit',
        'title' => 'SEPA Direct Debit',
        'description' => '',
        'information' => '',
        'format' => 'plain_text',
        'status' => true,
        'checkout' => true,
        'terminal' => true,
        'fieldable' => true,
    ];
    if (commerce_cop_payment_save($record)) {
        if (module_exists('commerce_payment_fields')) {
            //@to do deep integration with Drupal Commerce Payment Transaction Fields module.
            entity_info_cache_clear();
            menu_rebuild();
        }
    }

    // Add IBAN field.
    if (!field_info_field(DrupalBaumspendenConfig::FIELD_NAME_IBAN)) {
        $field_info = [
            'field_name' => DrupalBaumspendenConfig::FIELD_NAME_IBAN,
            'type' => 'iban_field',
        ];
        field_create_field($field_info);
    }
    if (!field_info_instance(
        'commerce_payment_transaction',
        DrupalBaumspendenConfig::FIELD_NAME_IBAN,
        'sepa_direct_debit'
    )) {
        $instance = [
            'field_name' => DrupalBaumspendenConfig::FIELD_NAME_IBAN,
            'entity_type' => 'commerce_payment_transaction',
            'bundle' => 'sepa_direct_debit',
            'label' => 'IBAN',
            'required' => true,
            'widget' => [
                'type' => 'iban_field',
            ],
        ];
        field_create_instance($instance);
    }

    // Add BIC field.
    if (!field_info_field(DrupalBaumspendenConfig::FIELD_NAME_BIC)) {
        $field_info = [
            'field_name' => DrupalBaumspendenConfig::FIELD_NAME_BIC,
            'type' => 'text',
        ];
        field_create_field($field_info);
    }
    if (!field_info_instance(
        'commerce_payment_transaction',
        DrupalBaumspendenConfig::FIELD_NAME_BIC,
        'sepa_direct_debit'
    )) {
        $instance = [
            'field_name' => DrupalBaumspendenConfig::FIELD_NAME_BIC,
            'entity_type' => 'commerce_payment_transaction',
            'bundle' => 'sepa_direct_debit',
            'label' => 'BIC',
            'required' => false,
            'widget' => [
                'type' => 'text_textfield',
            ],
        ];
        field_create_instance($instance);
    }
}

/**
 * Implements hook_uninstall().
 */
function baumspenden_uninstall()
{
    // TODO: field_delete_field()?
}

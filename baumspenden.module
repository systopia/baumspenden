<?php
/*-------------------------------------------------------+
| Bergwaldprojekt Baumspenden                            |
| Copyright (C) 2010 SYSTOPIA                            |
+--------------------------------------------------------+
| This program is released as free software under the    |
| Affero GPL license. You can redistribute it and/or     |
| modify it under the terms of this license which you    |
| can read by viewing the included agpl.txt or online    |
| at www.gnu.org/licenses/agpl.html. Removal of this     |
| copyright header is strictly prohibited without        |
| written permission from the original author(s).        |
+--------------------------------------------------------*/

/**
 * Implements hook_menu().
 */
function baumspenden_menu()
{
    $items['baumspende'] = [
        'title' => 'Baumspende',
        'page callback' => 'drupal_get_form',
        'page arguments' => ['baumspenden_donation'],
        'access arguments' => ['access baumspenden donation form'],
    ];

    return $items;
}

/**
 * Implements hook_permission().
 */
function baumspenden_permission()
{
    $permissions = [];

    $permissions['access baumspenden donation form'] = [
        'title' => t('Acces Baumspenden donation form'),
        'description' => t('Views and submit Baumspenden donation form'),
    ];

    return $permissions;
}

/**
 * Builds the "baumspenden_donation" form.
 *
 * @param $form
 * @param $form_state
 *
 * @return mixed
 */
function baumspenden_donation($form, &$form_state)
{
    $form['donations'] = [
        '#type' => 'fieldset',
        '#title' => 'Baumspenden',
        '#tree' => true,
        '#prefix' => '<div id="baumspenden-donations">',
        '#suffix' => '</div>',
    ];
    if (empty($form_state['storage']['donations'])) {
        $form_state['storage']['donations'][] = [];
    }
    foreach ($form_state['storage']['donations'] as $key => $donation) {
        if (is_numeric($key)) {
            $form['donations'][$key] = [
                '#type' => 'fieldset',
            ];
            $form['donations'][$key]['amount'] = [
                '#type' => 'textfield',
                '#title' => 'Ich spende',
                '#description' => 'Für mehr als 100 Bäume und Unternehmensspenden kontaktieren Sie uns bitte unter <a href="mailto:baumspende@bergwaldprojekt.de">baumspende@bergwaldprojekt.de</a>',
                '#field_suffix' => 'Baum/Bäume',
                '#required' => true,
                '#element_validate' => [
                    'element_validate_integer_positive',
                ],
            ];
            $form['donations'][$key]['plant_info'] = [
                '#prefix' => '<div id="baumspenden-plant-info--' . $key . '">',
                '#suffix' => '</div>',
            ];
            $form['donations'][$key]['plant_info']['plant_period'] = [
                '#type' => 'select',
                '#title' => 'Pflanzperiode',
                '#options' => DrupalBaumspendenConfig::getPlantPeriods(),
                '#empty_option' => '- Auswählen -',
                '#required' => true,
                '#ajax' => [
                    'wrapper' => 'baumspenden-plant-info--' . $key,
                    'callback' => '_baumspenden_donation_plant_info',
                ],
            ];

            if (isset($form_state['storage']['donations'][$key]['plant_info']['plant_period'])) {
                $form['donations'][$key]['plant_info']['plant_region'] = [
                    '#type' => 'select',
                    '#title' => 'Region',
                    '#options' => DrupalBaumspendenConfig::getPlantRegions(
                        $form_state['storage']['donations'][$key]['plant_info']['plant_period']
                    ),
                    '#required' => true,
                    '#ajax' => [
                        'wrapper' => 'baumspenden-plant-info--' . $key,
                        'callback' => '_baumspenden_donation_plant_info',
                    ],
                ];
            }

            if (isset($form_state['storage']['donations'][$key]['plant_info']['plant_region'])) {
                $form['donations'][$key]['plant_info']['plant_tree'] = [
                    '#type' => 'select',
                    '#title' => 'Baumart',
                    '#options' => DrupalBaumspendenConfig::getTreeSpecies(
                        $form_state['storage']['donations'][$key]['plant_info']['plant_period']
                    ),
                    '#required' => true,
                ];
            }
            $form['donations'][$key]['plant_info']['update'] = [
                '#type' => 'submit',
                '#baumspenden_op' => 'update_plant_info',
                // Distinctly identify button for this donation.
                '#name' => 'baumspenden_plant_info_' . $key,
                '#value' => t('Update'),
                '#attributes' => [
                    'class' => [
                        'hide-js',
                    ],
                ],
                '#attached' => [
                    'css' => [
                        drupal_get_path(
                            'module',
                            'baumspenden'
                        ) . '/css/baumspende.css',
                    ],
                ],
                // Do not validate anything (Ajax-like behavior).
                '#limit_validation_errors' => [],
                // #submit is required when using #limit_validation_errors.
                '#submit' => [
                    'baumspenden_donation_submit',
                ],
                '#baumspenden_donation_key' => $key,
            ];

            $form['donations'][$key]['certificate_name'] = [
                '#type' => 'textfield',
                '#title' => 'Name auf Zertifikat',
                '#description' => 'max. 40 Zeichen',
                '#attributes' => [
                    'placeholder' => 'Waldmariechen',
                ],
                '#maxlength' => 40,
            ];

            if ($key != 0) {
                $form['donations'][$key]['remove'] = [
                    '#type' => 'submit',
                    '#baumspenden_op' => 'remove_donation',
                    // Distinctly identify button for this donation.
                    '#name' => 'baumspenden_remove_donation_' . $key,
                    '#value' => t('Remove'),
                    // Do not validate anything.
                    '#limit_validation_errors' => [],
                    // #submit is required when using #limit_validation_errors.
                    '#submit' => [
                        'baumspenden_donation_submit',
                    ],
                    '#ajax' => [
                        'wrapper' => 'baumspenden-donations',
                        'callback' => '_baumspenden_donation_donations',
                    ],
                    '#baumspenden_donation_key' => $key,
                ];
            }
        }
    }
    $form['donations']['add'] = [
        '#type' => 'submit',
        '#baumspenden_op' => 'add_donation',
        '#value' => 'Baumspende hinzufügen',
        // Only validate related fields.
        '#limit_validation_errors' => [],
        // #submit is required when using #limit_validation_errors.
        '#submit' => [
            'baumspenden_donation_submit',
        ],
        '#ajax' => [
            'wrapper' => 'baumspenden-donations',
            'callback' => '_baumspenden_donation_donations',
        ],
    ];

    $form['contact'] = [
        '#type' => 'fieldset',
        '#title' => 'Meine Kontaktdaten',
        '#tree' => true,
    ];
    $form['contact']['first_name'] = [
        '#type' => 'textfield',
        '#title' => 'Vorname',
        '#required' => true,
    ];
    $form['contact']['last_name'] = [
        '#type' => 'textfield',
        '#title' => 'Nachname',
        '#required' => true,
    ];
    $form['contact']['street_address'] = [
        '#type' => 'textfield',
        '#title' => 'Straße, Hausnummer',
        '#required' => true,
    ];
    $form['contact']['postal_code'] = [
        '#type' => 'textfield',
        '#title' => 'Postleitzahl',
        '#required' => true,
    ];
    $form['contact']['city'] = [
        '#type' => 'textfield',
        '#title' => 'Ort',
        '#required' => true,
    ];
    $form['contact']['email'] = [
        '#type' => 'textfield',
        '#title' => 'E-Mail-Adresse',
        '#required' => true,
    ];

    $form['shipping_mode'] = [
        '#type' => 'select',
        '#title' => 'Versandoption',
        '#options' => [
            'email' => 'als PDF per E-Mail',
            'postal' => 'postalisch',
            'none' => 'kein Zertifikat',
        ],
    ];

    $form['newsletter'] = [
        '#type' => 'checkbox',
        '#title' => 'Newsletter abonnieren',
        '#description' => 'Newsletter mit aktuellen Themen rund um das Bergwaldprojekt',
    ];

    $form['gdpr_consent'] = [
        '#type' => 'checkbox',
        '#title' => 'Datenschutz',
        '#description' => 'Ich habe die <a href="' . variable_get(
                'baumspenden_gdpr_link',
                '/datenschutz'
            ) . '" target="_blank">Datenschutzerklärung</a> gelesen und akzeptiere diese.',
        '#required' => true,
    ];

    $form['actions'] = [
        '#type' => 'actions',
    ];
    $form['actions']['submit'] = [
        '#type' => 'submit',
        '#baumspenden_op' => 'preview',
        '#value' => 'Vorschau',
    ];

    return $form;
}

/**
 * Validates form submissions for the "baumspenden_donation" form.
 *
 * @param $form
 * @param $form_state
 */
function baumspenden_donation_validate($form, &$form_state)
{
    // Require a valid e-mail address.
    if (!valid_email_address($form_state['values']['contact']['email'])) {
        form_set_error(
            'email',
            'Bitte geben Sie eine gültige E-Mail-Adresse ein.'
        );
    }

    // Handle hierarchically dependent submissions of plant info fields.
    foreach (element_children($form['donations']) as $key) {
        if (is_numeric($key)) {
            $submitted_plant_info = &$form_state['values']['donations'][$key]['plant_info'];

            // Plant period field changes.
            if (
                isset($submitted_plant_info['plant_period'])
                && isset($form_state['storage']['donations'][$key]['plant_info']['plant_period'])
                && $submitted_plant_info['plant_period'] != $form_state['storage']['donations'][$key]['plant_info']['plant_period']
            ) {
                if (isset($form['donations'][$key]['plant_info']['plant_region'])) {
                    // Reset dependent field for plant region.
                    form_set_value(
                        $form['donations'][$key]['plant_info']['plant_region'],
                        null,
                        $form_state
                    );
                }
                if (isset($form['donations'][$key]['plant_info']['plant_tree'])) {
                    // Reset dependent field for tree species.
                    form_set_value(
                        $form['donations'][$key]['plant_info']['plant_tree'],
                        null,
                        $form_state
                    );
                }
            }

            // Plant region field changes.
            if (
                isset($submitted_plant_info['plant_region'])
                && isset($Form_state['storage']['donations'][$key]['plant_info']['plant_region'])
                && $submitted_plant_info['plant_region'] != $form_state['storage']['donations'][$key]['plant_info']['plant_period']
            ) {
                if ($submitted_plant_info['plant_region'] != $form_state['storage']['donations'][$key]['plant_info']['plant_period']) {
                    if (isset($form['donations'][$key]['plant_info']['plant_tree'])) {
                        // Reset dependent field for tree species.
                        form_set_value(
                            $form['donations'][$key]['plant_info']['plant_tree'],
                            null,
                            $form_state
                        );
                    }
                }
            }

            // Save updated plant info field values in the storage.
            $form_state['storage']['donations'][$key]['plant_info'] = $submitted_plant_info;
        }
    }
}

/**
 * Processes form submissions for the "baumspenden_donation" form.
 *
 * @param $form
 * @param $form_state
 */
function baumspenden_donation_submit($form, &$form_state)
{
    // Depend on which element trigered the submission.
    switch ($form_state['triggering_element']['#baumspenden_op']) {
        case 'update_plant_info':
            // Updating plant info fields. Simply rebuild the form.
            $form_state['rebuild'] = true;
            break;
        case 'add_donation':
            // Add values for another donation fieldset and rebuild the form.
            $form_state['storage']['donations'][] = [];
            $form_state['rebuild'] = true;
            break;
        case 'remove_donation':
            // Remove the donation fieldset values and rebuild the form.
            $key = $form_state['triggering_element']['#baumspenden_donation_key'];
            unset($form_state['storage']['donations'][$key]);
            $form_state['rebuild'] = true;
            break;
        case 'preview':
            // Preview (next step)
            form_state_values_clean($form_state);
            $form_state['storage'] = $form_state['values'];
            DrupalBaumspendenDonationForm::process($form_state['storage']);
            // TODO: Process newsletter request.
            break;
    }
}

/**
 * Returns plant info elements of the "baumspenden_donation" form to be replaced
 * by an Ajax request.
 *
 * @param $form
 * @param $form_state
 *
 * @return array
 */
function _baumspenden_donation_plant_info($form, &$form_state)
{
    $triggering_element_parents = $form_state['triggering_element']['#array_parents'];
    $plant_info_parents = array_slice($triggering_element_parents, 0, 3);
    return drupal_array_get_nested_value($form, $plant_info_parents);
}

/**
 * Returns donations elements of the "baumspenden_donation" form to be replaced
 * by an Ajax request.
 *
 * @param $form
 * @param $form_state
 *
 * @return array
 */
function _baumspenden_donation_donations($form, &$form_state)
{
    return $form['donations'];
}
